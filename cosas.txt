al menos usar 2 funciones básicas de prelude y Data.List (hecho)
definir 2 funciones recursivas (hecho)
definir 2 funciones por patrones (hecho)
2 usos de guardas (hecho)
2 usos de case of (hecho)
2 usos de listas por comprensión (hecho)
2 usos de orden superior (hecho)
declaraciones de tipos para todas las funciones definidas (siempre)
2 usos de evaluación perezosa, etc. (falta)
Creación de un módulo (hecho)
Creación de dos tipos de datos nuevos y usos de éstos. (hecho)
Uso de al menos dos de tipos de datos abstractos o librerías vistos en la asignatura ( pilas, colas, map, matrix, array).


Creamos una función donde le vamos a pasar la aplicación a la que queremos acceder a sus reviews, y devolvemos una lista de aplicaciones
[Rev {app = "PD", translated_Review = "GreatApp", sentiment = "Negative", sentiment_Polarity = -2.5e-2, sentiment_Subjectivity = 0.125},
Rev {app = "ISLU", translated_Review = "Pathetic app.", sentiment = "Negative", sentiment_Polarity = -0.3625,
 sentiment_Subjectivity = 0.625}]

let x = [Rev {app = "PD", translated_Review = "GreatApp", sentiment = "Negative", sentiment_Polarity = -2.5e-2, sentiment_Subjectivity = 0.125}, Rev {app = "ISLU", translated_Review = "Pathetic app.", sentiment = "Negative", sentiment_Polarity = -0.3625, sentiment_Subjectivity = 0.625}]::Reviews